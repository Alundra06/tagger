{"name":"Tagger","tagline":"Fluid Html Tag Builder in C#","body":"Tagger\r\n===============================================================\r\n\r\nTagger is a fluid Html tag builder that supports Html creation in a compile safe and testable way.\r\n\r\nInstallation available on NuGet [http://nuget.org/packages/Tagger/](http://nuget.org/packages/Tagger/)\r\n\r\n### Basic usages\r\n\r\n\tvar div = new Div()\r\n\t\t\t\t.Class(\"input-wrap\")\r\n\t\t\t\t.Add(new Label()\r\n\t\t\t\t\t\t.For(\"email\")\r\n\t\t\t\t\t\t.Text(\"Email Address:\")\r\n\t\t\t\t)\r\n\t\t\t\t.Add(new Input()\r\n\t\t\t\t\t\t.Id(\"email\")\r\n\t\t\t\t\t\t.Name(\"email\")\r\n\t\t\t\t\t\t.Class(\"required\")\r\n\t\t\t\t\t\t.AddClass(\"email\")\r\n\t\t\t\t);\r\n\r\n#### Call `div.GetHtml()` or `div.ToString()` to get the html output\r\n\r\n\t<div class=\"input-wrap\">\r\n\t\t<label for=\"email\">Email Address:</label>\r\n\t\t<input type=\"textbox\" id=\"email\" name=\"email\"></input>\r\n\t</div>\r\n\r\n#### Adding multiple tags using parameters\r\n\r\n\tvar div = new Div()\r\n\t\t\t\t.Add(\r\n\t\t\t\t\tnew Span().Text(\"Option 1\"),\r\n\t\t\t\t\tnew Span().Text(\"Option 2\"),\r\n\t\t\t\t\tnew Span().Text(\"Option 3\")\r\n\t\t\t\t);\r\n\t<div>\r\n\t\t<span>Option 1</span>\r\n\t\t<span>Option 2</span>\r\n\t\t<span>Option 3</span>\r\n\t</div>\r\n\r\n#### Surrounding tags\r\n\r\n\tvar button = new Button(ButtonType.Button)\r\n\t\t\t\t\t.SurroundWith(new Form());\r\n\r\n\t<form>\r\n\t\t<button type=\"button\"></button>\r\n\t</form>\r\n\t\t\t\t\t\r\n#### Void tags\r\n\r\n\tvar tag = new HtmlTag(\"hr\").SelfClose();\r\n\r\n\t<hr />\r\n\r\n### Form elements\r\n\r\nSome form elements have special usage\r\n\r\n#### Select lists\r\n\r\n\tvar tag = new Select()\r\n\t\t\t\t.Add(\r\n\t\t\t\t\tnew Option().Text(\"Option 1\").Value(\"1\"),\r\n\t\t\t\t\tnew Option().Text(\"Option 2\").Value(\"2\"),\r\n\t\t\t\t\tnew Option().Text(\"Option 3\").Value(\"3\")\r\n\t\t\t\t);\r\n\t<select>\r\n\t\t<option value=\"1\">Option 1</option>\r\n\t\t<option value=\"2\">Option 2</option>\r\n\t\t<option value=\"3\">Option 3</option>\r\n\t</select>\r\n\r\n#### Select lists using `KeyValuePair<string, string>`\r\n\r\n\tvar options = new Dictionary<string, string>();\r\n\toptions.Add(\"1\", \"Option 1\");\r\n\toptions.Add(\"2\", \"Option 2\");\r\n\toptions.Add(\"3\", \"Option 3\");\r\n\r\n\tvar tag = new Select().Add(options);\r\n\r\n\t<select>\r\n\t\t<option value=\"1\">Option 1</option>\r\n\t\t<option value=\"2\">Option 2</option>\r\n\t\t<option value=\"3\">Option 3</option>\r\n\t</select>\r\n\r\n### Tables\r\n\r\nComing Soon!\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}